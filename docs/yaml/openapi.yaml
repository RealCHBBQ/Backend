openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/shapestudent/ASM/1.0.0
  - description: Web API ASM
    url: https://https://blog-demo.realchbbq.repl.co/
info:
  description: Web API ASM
  version: "1.0.0"
  title: Web API ASM
  contact:
    email: 217104199@stu.vtc.edu.hk
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: users
    description: API endpoints for user management.
  - name: articles
    description: Access and perform CRUD operations on blog entries.
  
paths:
  /api/v1/dogs:
    get:
      description: Returns a list of dog              
      responses:
        '200':
          description: Successful response
          
    post:
      security: 
      - BasicAuth: []
      description: Add a list of dog
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - summary
                - size
              properties:
                authorid:
                  type: number
                imageurl:
                  type: string
                summary:
                  type: string
                title:
                  type: string
                size:
                  type: string
      responses:
        '200':
          description: Successful response
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:   
                  message:
                    type: string  
                    
  /api/v1/dogs/{id}:
    get:
      description: Returns a dog     
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
      
      responses:
        '200':
          description: Successful response
    put:
      description: edit a dog  
      security: 
        - BasicAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - summary
                - size
              properties:
                authorid:
                  type: number
                imageurl:
                  type: string
                summary:
                  type: string
                title:
                  type: string
                size:
                  type: string
      responses:
        '200':
          description: Successful response
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:   
                  message:
                    type: string  
    delete:
      description: del a dog  
      security: 
        - BasicAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
      responses:
        '200':
          description: Successful response
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:   
                  message:
                    type: string  
                    
  /api/v1/dogs/{id}/likes:
    get:
      description: Returns likes of a dog 
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
      responses:
        '200':
          description: Successful response
    post:
      description: add likes to a dog 
      security: 
        - BasicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - userid
              properties:
                userid:
                  type: number
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
      
      responses:
        '200':
          description: Successful response
    
  
  /api/v1/images:
    post:
      security: 
        - BasicAuth: []
      requestBody:
        content:
          image/png:
            schema:
              type: string
              format: string
      responses:
        '200':
          description: Successful response
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:   
                  message:
                    type: string  
  /api/v1/users:
    get:
      security: 
        - BasicAuth: []
      description: Returns a list of users              
      responses:
        '200':
          description: Successful response
          
    post:
      description: create a users 
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
                - email
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
      responses:
        '200':
          description: Successful response

        
      
  /api/v1/users/search:
    get:
      security: 
        - BasicAuth: []
      description: search a list of users              
      responses:
        '200':
          description: Successful response  
  /api/v1/users/{id}:
    get:
      security: 
        - BasicAuth: []
      description: Returns a users  
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
      responses:
        '200':
          description: Successful response  
          
    put:
      description: edit a users
      security: 
        - BasicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number  
      responses:
        '200':
          description: Successful response  
  /api/v1/codes:
    get:
      description: show all code
      security: 
        - BasicAuth: []
      responses:
        '200':
          description: Successful response
  /api/v1/codes/{id}:  
    get:
      description: get code by id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number  
      security: 
        - BasicAuth: []
      responses:
        '200':
          description: Successful response 
          
  
